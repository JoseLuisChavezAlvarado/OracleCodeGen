package code_generator.views;

import code_generator.Generator;
import java.util.Map;
import penoles.oraclebdutils.entities.TableDetails;
import penoles.oraclebdutils.entities.ViewObject;
import penoles.oraclebdutils.utils.ReflectUtils;
import penoles.oraclebdutils.utils.StringUtils;
import utils.FileUtils;

/**
 *
 * @author Jose Luis Ch.
 */
public class ViewsGenerator {

    public static void createEntityClass(ViewObject object, String path, Map<String, TableDetails> mapDetails) {
        String classEntityName = StringUtils.toUpperCamelCase(StringUtils.toLowerScoreCase(object.getTable_name()));
        String fileEntityName = path.concat(Generator.DB_VIEWS_PATH).concat(classEntityName).concat(".java");
        String fileEntityContent = writeEntityFile(mapDetails, classEntityName);
        FileUtils.writeFile(fileEntityName, fileEntityContent);
    }

    private static String writeEntityFile(Map<String, TableDetails> mapDetails, String className) {

        StringBuilder builder = new StringBuilder();
        StringBuilder builderParams = new StringBuilder();
        StringBuilder builderExtras = new StringBuilder();
        StringBuilder builderGetters = new StringBuilder();
        StringBuilder builderExtraParams = new StringBuilder();

        StringBuilder builderConstr = new StringBuilder();
        StringBuilder builderConstrParams = new StringBuilder();
        StringBuilder builderConstrValues = new StringBuilder();

        builderExtraParams.append("\n");
        builder.append("package entities.views;");
        builder.append("\n\nimport java.io.Serializable;");
        builder.append("\n/**\n *\n * @author Class generated by JDBCUtils.\n */");
        builder.append("\npublic class ").append(className).append(" implements Serializable {");

        builderConstr.append("\n\n\tpublic ").append(className).append("() {\n\t}");
        builderConstr.append("\n\n\tpublic ").append(className).append("(");

        for (Map.Entry entry : mapDetails.entrySet()) {
            TableDetails details = (TableDetails) entry.getValue();

            String paramType = ReflectUtils.getPropperFieldType(details.getType());
            String paramName = details.getField();

            builderParams.append("\n\tprivate ").append(paramType).append(" ").append(paramName).append(";");

            String upperCasedParamName = StringUtils.toUpperCamelCaseNew(paramName);

            builderGetters.append("\n\n\tpublic ").append(paramType).append(" get").append(upperCasedParamName).append("() {");
            builderGetters.append("\n\t\treturn ").append(paramName).append(";");
            builderGetters.append("\n\t}");

            builderGetters.append("\n\n\tpublic void set").append(upperCasedParamName).append("(").append(paramType).append(" ").append(paramName).append(") {");
            builderGetters.append("\n\t\tthis.").append(paramName).append(" = ").append(paramName).append(";");
            builderGetters.append("\n\t}");

            builderConstrParams.append(paramType).append(" ").append(paramName).append(", ");
            builderConstrValues.append("\n\t\tthis.").append(paramName).append(" = ").append(paramName).append(";");

        }

        builderConstrParams.replace(builderConstrParams.length() - 2, builderConstrParams.length(), "");
        builderConstr.append(builderConstrParams).append(") {");
        builderConstr.append(builderConstrValues);
        builderConstr.append("\n\t}");

        builder.append("\n").append(builderParams).append(builderExtraParams).append(builderConstr).append(builderGetters).append(builderExtras).append("\n}");

        return builder.toString();
    }

}
